# Configuration file for Vibe C1 with HDAEC enabled
# Non Linear T shape

version = "2.1";

# General
general:
{
    epsilon = 1E-20;
    
    resampler:
    {
        engine = "speex"; # speex/default/biquad
        speexResampleQuality = 5; # 1-10
    }

    mapping:
    {
        map: (1,2,3,4,5,6,8);
        nChannels = 7; # 6mic+ 1lp
    };

    size: 
    {   
        hopSize = 160;
        halfFrameSize = 257;
    };

    stft:
    {
       sampleSize = 512;
       halfFrameSize = 257;
       shiftSize = 128;
       windowType = "hanning"; #hamming/hanning/blackman
    }

    samplerate:
    {
        mu = 16000;
        sigma2 = 0.01;
    };

    speedofsound:
    {
        mu = 343.0;
        sigma2 = 25.0;
    };

    recorder:
    {
        file_path = "/tmp/test";
        file_type = "wav"; # 0: raw, 1: wav
        position: ("ssl"); # src/down/anr/bf/ssl/agc/up/sink
    };              

    options:
    {
        enable_biquad = 1;
        enable_anr = 1;
        enable_ssl = 1;
        enable_bf = 1;
        enable_agc = 1;
        enable_cng = 0;
        #for debug
        enable_recorder = 1;
    };

};

# Source/Raw
source: 
{
    # Inputs are sended from API instead of the file config.
    fS = 16000;
    hopSize = 160;
    nBits = 16;
    nChannels = 8; # 6mic + 1none + 1lp
    # Input with raw signal from microphones
    interface: {
        type = "buffer";
        # type = "soundcard_name";
        # devicename = "sysdefault:CARD=rockchippdmmica";
    }
}

biquad:
{
    frequency = 0.0; #default 350, and can take a value range from 0 to half of sample rate 
    q = 0; #1 and a nominal range of 0.0001 to 1000.
    gain = 0.0; #0, and can take a value in a nominal range of -40 to 40
    
    cutoff = 120.0; #default 350, and can take a value range from 0 to half of sample rate 
    resonance = 0.707 #1 and a nominal range of 0.0001 to 1000.
    type = "highpass";
    

    enable_channels: (1, 2, 3 ,4, 5, 6, 7);
    
    # Valid types and required parameters
    # lowpass: cutoff, resonance
    # highpass: cutoff, resonance
    # bandpass: freq, q
    # notch: freq, q
    # peaking: freq, q, gain
    # allpass: freq, q
    # lowshelf: freq, q, gain
    # highshelf: freq, q, gain
}

anr:{
    preGainLoopback = 0.0; #dB
    preGainMicphone = 20.0; 
    engine ="aianr"; # aianr/bypass
    nChannels = 8; # 6mic+ 1lp + 1mvdr_out
    model_path = "/etc/vibe/dsp/model/aec_rk3588_dtln_1_T2_1_2_f4.rknn";
    
    bf:
    {
        engine = "mvdr"; # mvdr/cbf/bypass
        on_frames = 4; # base on AI model frame size
        nChannels = 1; # 1mvdr 
    }
}

ssl:
{   
    fS = 16000;
    inChannels = 7; # 6mic+1lp
    outChannels = 8; # 6mic+1lp+1angle
    halfFrameSize = 257;
    nSamples = 512; #now only support 512
    mask_model_path = "/etc/vibe/dsp/model/aec_rk3588_dtln_1_T2_0_3_f4.rknn";
    vad:{
            engine = "no_speaker"; # 2. onnx, 1.webrtc, 0.none
            mode = 3; # 0, 1, 2, 3 for webrtc, conservative -> aggressive
            threshold = 0.50; # [0, 1] for onnx
    }
    # Microphone 1~6 position
    mics = (
        {mu = ( -0.041610, +0.000000, +0.000000 )},
        {mu = ( -0.020810, -0.036040, +0.000000 )},
        {mu = ( +0.020810, -0.036040, +0.000000 )},
        {mu = ( +0.041610, +0.000000, +0.000000 )},
        {mu = ( +0.020810, +0.036040, +0.000000 )},
        {mu = ( -0.020810, +0.036040, +0.000000 )}
    );

    nThetas = 181;
    gainMin = 0.25;
}

cng:
{
    #lpc comfort noise
    type = "rms"; # vad/rms
    nChannels = 1; # 1 mixed 
    lpcOrder = 10;# recommond [10,16]
    noiseEpsilon = 3E-4;

    #vad 
    vad:{
        engine = "webrtc"; # 2. onnx, 1.webrtc, 0.none
        mode = 0; # 0, 1, 2, 3 for webrtc
        threshold = 0.35; # [0, 1] for onnx
    }
}

agc:
{ 
    #webrtc agc engine
    mode = 2; #AdaptiveAnalog, 2:AdaptiveDigital, 3:FixedDigital
    compressionGainDB = 9;  # default 9 dB
    limitterEnable = 1; # default kAgcTrue (on)
    targetDBFS = 3; # default 3 (-3 dBOv)
    echoConsider = 0;
    minLevel = 0;
    maxLevel = 255;  
}

sink: {
    # Outputs are sended from API instead of the file config.
    fS = 16000;
    hopSize = 160;
    nBits = 16;
    nMixToChannels = 1; # Channel mixing only works in ALSA sink device 
    interface: {
        type = "buffer";#"blackhole/soundcard_name/buffer/file";
    }
}
